#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<iostream>
# define Max 100
# define INF 10000
using namespace std;
typedef struct place {
    char name[20];//地点名称
    int index;//下标
    char intro[50];//地点简介
}PLA;//定义位置
typedef struct {
    PLA place[Max];
    int edge[Max][Max];
    int vertexnum;//点的数目
    int edgenum;//边数目 
}Graph;//定义一个图
void Init_Graph(Graph *G);//初始化一个图
void show_menu(Graph * G);//输出菜单
void shortestdistance(Graph *G);//求最短距离
void display(Graph *G,int start,int end);//展示路径
int path[Max][Max]={0};
int main()
{   Graph G;
    Init_Graph(&G);
    show_menu(&G);
    return 0;
}
void Init_Graph(Graph *G)
{
    int i,j,o,l,k;
    cout<<"请输入校园地点的数目：";
     cin>> G->vertexnum;
    cout<<"请输入校园两地点相连的边的数目：" ;
    cin>>G->edgenum;
	l=2*G->edgenum;
	    //初始化一下图
    for(i=0;i<G->vertexnum;i++)
    {
        for(j=0;j<G->vertexnum;j++)
        {
            if(i==j)
            {
                G->edge[i][j]=0;//如果自己和自己，无权值，默认为0
            }
            else
            {
                G->edge[i][j]=INF;//加权值默认为最大值
            }
        }
    }
    //具体输入图
	for(o=0;o<G->vertexnum;o++)
	{
        printf("请输入第%d个地点的下标：",o);
		cin>> G->place[o].index;
		printf("请输入第%d个地点的名称：",o);
		cin>>G->place[o].name;
		printf("请输入第%d个地点的简介：",o);
		cin>>G->place[o].intro;
		}
    //具体距离
for(k=0;k<l;k++)
 {    
	int n,m;
	cout <<  "请输入边（vi, vj)的上标i，下标j和权值w（空格分隔）:" << endl;
	scanf("%d%d",&n,&m);
	scanf("%d",&G->edge[n][m]);
 }
}
void show_menu(Graph *G)
{
    int choice;
    int start;
    int end;
    int i,q,w;
    int returnmenu;
    int place;
    float minroad;
    int flag=0;
    do
    {
    system("cls");
    printf("请输入您所选择的功能序号：\n"); 
	printf("1.输出校园平面图\n");
    printf("2.查询最短路径\n");
    printf("3.查询景点信息\n");
    printf("4.退出\n");
    scanf("%d",&choice);
	if(choice==1)
	{
	printf("----------------------------------------欢迎使用校园导航系统-------------------------------------------------\n");
    printf("-------------------------------------------以下为简易地图----------------------------------------------------\n");
    printf("                                            16.北门                                                          \n");
	printf("                                              |    \\                                                        \n");
	printf("                                              |        \\                                                    \n");
	printf("                                              |            \\                                                \n");
	printf("                                              |                \\                                            \n");
	printf("                                              |                     \\         60m                           \n");
	printf("                                              |                         \\                                   \n");
	printf("                                              |                             \\                               \n");
	printf("                                          50m |                                 \\                           \n");
	printf("                                              |                                     \\                       \n");
	printf("                                              |                                       15.北区寝室            \n");
    printf("                                              |                                               |              \n");
	printf("                                              |                                               |              \n");
	printf("                                              |                                               |              \n");
	printf("                                              |                                               |  20m         \n");
    printf("                                              |                                               |              \n");
    printf("                                 50m          |         40m                       30m         |              \n");
	printf("                11.工程训练中心————12.艺术馆——————13.北区生活广场————————14.北区食堂       \n");
	printf("               /                       /|       \\                     \\                       /            \n");
	printf("              /                       / |         \\                    \\                    /              \n");
	printf("             /                      /   |            \\                  \\                 /                \n");
	printf("         10m/                     /     |               \\60m             \\ 30m          /30m               \n");
	printf("           /                    /       |                  \\              \\           /                    \n");
    printf("          /               60m  /        |                     \\            \\        /                      \n");
    printf("   10.逸夫科技馆             /          |                        \\          \\     /                        \n");
    printf("          |                /           /                             \\       \\  /                          \n");
    printf("          |               /           /                     8.沈阳航空航天大学大学生活动广场                 \n");
	printf("          |             /            /                    /                |                                 \n");
	printf("       30m|           /             /                   /                  |                                 \n");
	printf("          |         /              / 100m            /                     |                                 \n");
	printf("          |       /               /              /                         |                                 \n");
    printf("          |     /                /           /65m                          |                                 \n");
    printf("      9.机械馆                  /         /                                |                                 \n");
	printf("            \\                 /       /                                    |                                \n");
	printf("              \\              /     /                                       |      10m                       \n");
	printf("         70m    \\           /   /                                          |                                \n");
    printf("                  5.  图书馆  /                                            \|                                \n");
	printf("                \\           \\                                              |                               \n");
	printf("                \\               \\                                          |                               \n");
	printf("                 \\                 \\ 60m                                   |                               \n");
	printf("                  \\                   \\                                    |                               \n");
	printf("              20m  \\                     \\               10m               |                               \n");
	printf("                    \\                     \\ 6.尊师亭————————7.蓝天剧场                             \n");
	printf("                     \\                  / 70m                                                               \n");
	printf("                       \\              /                                                                     \n");
	printf("                       4.综合教学楼  \\  60m                                                                 \n");
	printf("                     /                 \\                                                                    \n");
	printf("              40m /                    / 3.校医院                                                            \n");
	printf("               /                    /                                                                        \n");
	printf("     2.南食堂 \\                 / 40m                                                                       \n");
	printf("               \\             /                                                                              \n");
	printf("   20m           \\          /                                                                               \n");
	printf("                   1. 南门                                                                                   \n");
	printf("-------------------------------------------------------------------------------------------------------------\n");
    printf("                                  北                                                                         \n");
    printf("                                  |                                                                          \n");
    printf("                            西---------东                                                                    \n");
    printf("                                  |                                                                          \n");
    printf("                                  南                                                                         \n"); 
	printf("-------------------------------------------------------------------------------------------------------------\n");
	} 
	else  if(choice==2)
    {
    
        printf("请输入起点及终点序号：\n");
        scanf("%d%d",&start,&end); 
        if(start<0||start>17||end<0||end>17)
        {
            printf("输入有误\n");
            exit(-1);
        }
        
        shortestdistance(G);
        minroad=G->edge[start-1][end-1];
        display(G,start,end);
        printf("最短路径为:%.2f M\n",minroad);
    }
    else if(choice==3)
    {
    
        printf("请输入您想查询的位置的序号\n");
        scanf("%d",&place);
        for(i=0;i<G->vertexnum;i++)
        {
            if(place==i+1)
            {
                printf("该地点为:\n");
                puts(G->place[i].name);
                printf("简介为:\n");
                puts(G->place[i].intro);
            }

        }
}
    else if(choice==4)
    {
        exit(-1);
    }
    else
    {
        printf("输入错误！\n");
    }
    printf("请输入是否返回主菜单1为是，2为不是)：\n");
    scanf("%d",&returnmenu);
    if(returnmenu==1)
    {
        flag=0;
    }
    else if(returnmenu==2)
    {
        flag=1;
    }
}
while(flag==0);
} 
void shortestdistance(Graph *G)
{
    
    int k,v,w;
    //k为中间点
    // v为起点
    //w为终点
    for(k=0;k<G->vertexnum;k++)
    {
        for(v=0;v<G->vertexnum;v++)
        {
            for(w=0;w<G->vertexnum;w++)
            {
                if(G->edge[v][w]>(G->edge[v][k]+G->edge[k][w]))
                {
                    G->edge[v][w]=G->edge[v][k]+G->edge[k][w];
                    path[v][w]=k;//v->w要经过k 
         
                    path[w][v]=k;//w->v要经过k 
                 } 
            }
        }
     } 
 }
void display(Graph *G,int start,int end)
{
    int i=start-1;
    int j=end-1;
    printf("您要查询的两景点间最短路径是: ");
    if(G->edge[i][j]!=INF)	
    {
        if(i<j)
        {
            printf("%s",G->place[end-1].name);
            while(path[i][j]!=0)
            {/*把从i到j的路径上所有经过的景点按逆序打印出来*/
                printf("<--");
                printf("%s",G->place[path[i][j]].name);
                if(i<j)
                    j=path[i][j];
                else
                    i=path[j][i];
            }
            printf("<--");
            printf("%s",G->place[start-1].name);
            printf(" ");
            
        }
        else
        {
            printf("%s",G->place[start-1].name);
            while(path[i][j]!=0)
            {/*把从i到j的路径上所有经过的景点按顺序打印出来*/
                printf("-->");
                printf("%s",G->place[path[i][j]].name);
                if(i<j)
                    j=path[i][j];
                else
                    i=path[j][i];
            }
            printf("-->");
            printf("%s",G->place[end-1].name);
            printf(" ");
        
        }
    }
    else
        printf("输入错误不存在此路！\n");
    printf(" ");
 } 




    
